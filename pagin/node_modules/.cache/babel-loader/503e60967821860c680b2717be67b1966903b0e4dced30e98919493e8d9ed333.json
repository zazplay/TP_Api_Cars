{"ast":null,"code":"var _jsxFileName = \"E:\\\\Git\\\\ReactDZ1\\\\React_repos\\\\pagin\\\\src\\\\components\\\\ButtonMap\\\\ButtonMap.tsx\";\nimport React from 'react';\n\n// Определяем стили кнопки прямо здесь\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  background-color: #4CAF50;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\n  border-radius: 8px;\n  position: fixed; /* Примерная позиция */\n  bottom: 20px; /* Примерная позиция */\n  left: 20px; /* Примерная позиция */\n  z-index: 1000; /* Примерная позиция */\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c = Button;\nconst ButtonComponent = ({\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: onClick,\n    children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0443\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n_c2 = ButtonComponent;\nexport default ButtonComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ButtonComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Button","styled","button","_c","ButtonComponent","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["E:/Git/ReactDZ1/React_repos/pagin/src/components/ButtonMap/ButtonMap.tsx"],"sourcesContent":["import React from 'react';\r\n\r\n// Определяем стили кнопки прямо здесь\r\nconst Button = styled.button`\r\n  background-color: #4CAF50;\r\n  border: none;\r\n  color: white;\r\n  padding: 15px 32px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n  border-radius: 8px;\r\n  position: fixed; /* Примерная позиция */\r\n  bottom: 20px; /* Примерная позиция */\r\n  left: 20px; /* Примерная позиция */\r\n  z-index: 1000; /* Примерная позиция */\r\n\r\n  &:hover {\r\n    background-color: #45a049;\r\n  }\r\n`;\r\n\r\ninterface ButtonComponentProps {\r\n  onClick: () => void;\r\n}\r\n\r\nconst ButtonComponent: React.FC<ButtonComponentProps> = ({ onClick }) => {\r\n  return <Button onClick={onClick}>Показать карту</Button>;\r\n};\r\n\r\nexport default ButtonComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GApBIH,MAAM;AA0BZ,MAAMI,eAA+C,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACvE,oBAAON,OAAA,CAACC,MAAM;IAACK,OAAO,EAAEA,OAAQ;IAAAC,QAAA,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAC1D,CAAC;AAACC,GAAA,GAFIP,eAA+C;AAIrD,eAAeA,eAAe;AAAC,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}