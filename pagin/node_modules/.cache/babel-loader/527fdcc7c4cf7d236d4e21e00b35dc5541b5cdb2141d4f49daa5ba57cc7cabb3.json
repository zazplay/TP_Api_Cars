{"ast":null,"code":"var _jsxFileName = \"D:\\\\lessens\\\\js\\\\react\\\\2\\\\React_repos\\\\pagin\\\\src\\\\components\\\\SVGMap\\\\SVGMap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport { SvgContainer, Modal, CloseButton } from './SVGMap.styled';\nimport Map from './ukraine.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SvgMap = ({\n  isOpen,\n  onClose,\n  regions\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  useEffect(() => {\n    if (svgRef.current) {\n      // Применяем цвета к регионам\n      regions.forEach(region => {\n        var _svgRef$current;\n        const element = (_svgRef$current = svgRef.current) === null || _svgRef$current === void 0 ? void 0 : _svgRef$current.querySelector(`#${region.id}`);\n        if (element) {\n          element.setAttribute('style', `fill: ${region.color};`);\n        }\n      });\n    }\n  }, [regions, isOpen]); // Перезапуск при изменении regions или isOpen\n\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n      onClick: onClose,\n      children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SvgContainer, {\n      children: /*#__PURE__*/_jsxDEV(ReactSVG, {\n        src: Map,\n        beforeInjection: svg => {\n          // Сохраняем ссылку на SVG\n          svgRef.current = svg;\n        },\n        onError: error => {\n          console.error('Ошибка при загрузке SVG:', error);\n        },\n        style: {\n          width: '100%',\n          height: 'auto'\n        } // Устанавливаем стили для SVG\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(SvgMap, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = SvgMap;\nexport default SvgMap;\nvar _c;\n$RefreshReg$(_c, \"SvgMap\");","map":{"version":3,"names":["React","useEffect","useRef","ReactSVG","SvgContainer","Modal","CloseButton","Map","jsxDEV","_jsxDEV","SvgMap","isOpen","onClose","regions","_s","svgRef","current","forEach","region","_svgRef$current","element","querySelector","id","setAttribute","color","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","beforeInjection","svg","onError","error","console","style","width","height","_c","$RefreshReg$"],"sources":["D:/lessens/js/react/2/React_repos/pagin/src/components/SVGMap/SVGMap.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport { SvgContainer, Modal, CloseButton } from './SVGMap.styled';\nimport Map from './ukraine.svg';\n\ninterface Region {\n  id: string;\n  color: string;\n}\n\ninterface SvgMapProps {\n  isOpen: boolean;\n  onClose: () => void;\n  regions: Region[];\n}\n\nconst SvgMap: React.FC<SvgMapProps> = ({ isOpen, onClose, regions }) => {\n  const svgRef = useRef<SVGSVGElement | null>(null);\n\n  useEffect(() => {\n    if (svgRef.current) {\n      // Применяем цвета к регионам\n      regions.forEach((region) => {\n        const element = svgRef.current?.querySelector(`#${region.id}`);\n        if (element) {\n          element.setAttribute('style', `fill: ${region.color};`);\n        }\n      });\n    }\n  }, [regions, isOpen]); // Перезапуск при изменении regions или isOpen\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      <CloseButton onClick={onClose}>Закрыть</CloseButton>\n      <SvgContainer>\n        <ReactSVG\n          src={Map}\n          beforeInjection={(svg) => {\n            // Сохраняем ссылку на SVG\n            svgRef.current = svg;\n          }}\n          onError={(error) => {\n            console.error('Ошибка при загрузке SVG:', error);\n          }}\n          style={{ width: '100%', height: 'auto' }} // Устанавливаем стили для SVG\n        />\n      </SvgContainer>\n    </Modal>\n  );\n};\n\nexport default SvgMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,YAAY,EAAEC,KAAK,EAAEC,WAAW,QAAQ,iBAAiB;AAClE,OAAOC,GAAG,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAahC,MAAMC,MAA6B,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAMC,MAAM,GAAGb,MAAM,CAAuB,IAAI,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,IAAIc,MAAM,CAACC,OAAO,EAAE;MAClB;MACAH,OAAO,CAACI,OAAO,CAAEC,MAAM,IAAK;QAAA,IAAAC,eAAA;QAC1B,MAAMC,OAAO,IAAAD,eAAA,GAAGJ,MAAM,CAACC,OAAO,cAAAG,eAAA,uBAAdA,eAAA,CAAgBE,aAAa,CAAC,IAAIH,MAAM,CAACI,EAAE,EAAE,CAAC;QAC9D,IAAIF,OAAO,EAAE;UACXA,OAAO,CAACG,YAAY,CAAC,OAAO,EAAE,SAASL,MAAM,CAACM,KAAK,GAAG,CAAC;QACzD;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACX,OAAO,EAAEF,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEvB,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEF,OAAA,CAACJ,KAAK;IAAAoB,QAAA,gBACJhB,OAAA,CAACH,WAAW;MAACoB,OAAO,EAAEd,OAAQ;MAAAa,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACpDrB,OAAA,CAACL,YAAY;MAAAqB,QAAA,eACXhB,OAAA,CAACN,QAAQ;QACP4B,GAAG,EAAExB,GAAI;QACTyB,eAAe,EAAGC,GAAG,IAAK;UACxB;UACAlB,MAAM,CAACC,OAAO,GAAGiB,GAAG;QACtB,CAAE;QACFC,OAAO,EAAGC,KAAK,IAAK;UAClBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD,CAAE;QACFE,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO,CAAE,CAAC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEZ,CAAC;AAAChB,EAAA,CAnCIJ,MAA6B;AAAA8B,EAAA,GAA7B9B,MAA6B;AAqCnC,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}