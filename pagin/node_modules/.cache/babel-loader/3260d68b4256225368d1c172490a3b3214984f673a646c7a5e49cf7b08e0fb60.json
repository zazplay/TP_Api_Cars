{"ast":null,"code":"var _jsxFileName = \"D:\\\\lessens\\\\js\\\\react\\\\2\\\\React_repos\\\\pagin\\\\src\\\\components\\\\sitepagenumsearch\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Search from '../searchnum/searchnum';\nimport PaginaCards from '../pca/pca';\nimport ButtonComponent from '../ButtonMap/ButtonMap';\nimport SvgMap from '../SVGMap/SVGMap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [newModalIsOpen, setNewModalIsOpen] = useState(false); // Состояние для нового модального окна\n\n  const [regions, setRegions] = useState([]);\n  const [carData, setCarData] = useState(null);\n  const [Searchnomer, setNomer] = useState(\"\");\n  const handleButtonClick = () => {\n    setModalIsOpen(true);\n  };\n  const handleNewModalButtonClick = () => {\n    setNewModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  const closeNewModal = () => {\n    setNewModalIsOpen(false);\n  };\n  useEffect(() => {\n    if (carData && typeof carData === 'object' && 'region' in carData) {\n      setRegions([{\n        id: carData.region.slug,\n        color: '#a3a3a3'\n      }]);\n    }\n  }, [carData]);\n  console.log(carData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      setDataFromSearch: setCarData,\n      setNomer: setNomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginaCards, {\n      car: carData,\n      nomer: Searchnomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonComponent, {\n      onClick: handleButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SvgMap, {\n      isOpen: modalIsOpen,\n      onClose: closeModal,\n      regions: regions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Ve1ziH1YvtmU0jrqiD9fU8vPJIs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Search","PaginaCards","ButtonComponent","SvgMap","jsxDEV","_jsxDEV","App","_s","modalIsOpen","setModalIsOpen","newModalIsOpen","setNewModalIsOpen","regions","setRegions","carData","setCarData","Searchnomer","setNomer","handleButtonClick","handleNewModalButtonClick","closeModal","closeNewModal","id","region","slug","color","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","setDataFromSearch","car","nomer","onClick","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/lessens/js/react/2/React_repos/pagin/src/components/sitepagenumsearch/App.tsx"],"sourcesContent":["import React, { FC, useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Search from '../searchnum/searchnum';\r\nimport PaginaCards from '../pca/pca';\r\nimport CardCar from '../CardCar/CardCar';\r\nimport ButtonComponent from '../ButtonMap/ButtonMap';\r\nimport SvgMap from '../SVGMap/SVGMap';\r\n\r\ninterface Car {\r\n  comments: string[];\r\n  digits: string;\r\n  is_stolen: boolean;\r\n  model: string;\r\n  model_year: number;\r\n  operations: Array<any>;\r\n  photo_url: string;\r\n  region: {\r\n    name: string;\r\n    name_ua: string;\r\n    slug: string;\r\n    old_code: string;\r\n    new_code: string;\r\n  };\r\n  stolen_details: any;\r\n  vendor: string;\r\n  vin: string;\r\n}\r\n\r\ninterface Region {\r\n  id: string;\r\n  color: string;\r\n}\r\n\r\nconst App: FC = () => {\r\n  const [modalIsOpen, setModalIsOpen] = useState<boolean>(false);\r\n  const [newModalIsOpen, setNewModalIsOpen] = useState<boolean>(false); // Состояние для нового модального окна\r\n\r\n  const [regions, setRegions] = useState<Region[]>([]);\r\n\r\n  const [carData, setCarData] = useState<Car | null | string>(null);\r\n  const [Searchnomer, setNomer] = useState<string>(\"\");\r\n\r\n\r\n  const handleButtonClick = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n  const handleNewModalButtonClick = () => {\r\n    setNewModalIsOpen(true);\r\n  };\r\n\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n  const closeNewModal = () => {\r\n    setNewModalIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (carData && typeof carData === 'object' && 'region' in carData) {\r\n      setRegions([{ id: carData.region.slug, color: '#a3a3a3' }]);\r\n    }\r\n  }, [carData]);\r\n\r\n  console.log(carData);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"background\"></div>\r\n      <Search setDataFromSearch={setCarData} setNomer={setNomer}></Search>\r\n      <PaginaCards car={carData} nomer={Searchnomer}></PaginaCards>\r\n      <ButtonComponent onClick={handleButtonClick} />\r\n      <SvgMap isOpen={modalIsOpen} onClose={closeModal} regions={regions} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,WAAW,MAAM,YAAY;AAEpC,OAAOC,eAAe,MAAM,wBAAwB;AACpD,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA2BtC,MAAMC,GAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EAC9D,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAU,KAAK,CAAC,CAAC,CAAC;;EAEtE,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAW,EAAE,CAAC;EAEpD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAsB,IAAI,CAAC;EACjE,MAAM,CAACkB,WAAW,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAS,EAAE,CAAC;EAGpD,MAAMoB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BT,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EACD,MAAMU,yBAAyB,GAAGA,CAAA,KAAM;IACtCR,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAGD,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBX,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EACD,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1BV,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,IAAIe,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAI,QAAQ,IAAIA,OAAO,EAAE;MACjED,UAAU,CAAC,CAAC;QAAES,EAAE,EAAER,OAAO,CAACS,MAAM,CAACC,IAAI;QAAEC,KAAK,EAAE;MAAU,CAAC,CAAC,CAAC;IAC7D;EACF,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;EAEbY,OAAO,CAACC,GAAG,CAACb,OAAO,CAAC;EAEpB,oBACET,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxB,OAAA;MAAKuB,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClC5B,OAAA,CAACL,MAAM;MAACkC,iBAAiB,EAAEnB,UAAW;MAACE,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACpE5B,OAAA,CAACJ,WAAW;MAACkC,GAAG,EAAErB,OAAQ;MAACsB,KAAK,EAAEpB;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eAC7D5B,OAAA,CAACH,eAAe;MAACmC,OAAO,EAAEnB;IAAkB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/C5B,OAAA,CAACF,MAAM;MAACmC,MAAM,EAAE9B,WAAY;MAAC+B,OAAO,EAAEnB,UAAW;MAACR,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV,CAAC;AAAA1B,EAAA,CA1CKD,GAAO;AAAAkC,EAAA,GAAPlC,GAAO;AA4Cb,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}