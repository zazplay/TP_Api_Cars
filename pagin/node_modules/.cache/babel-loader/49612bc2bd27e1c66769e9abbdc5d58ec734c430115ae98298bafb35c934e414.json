{"ast":null,"code":"var _jsxFileName = \"D:\\\\lessens\\\\js\\\\react\\\\2\\\\React_repos\\\\pagin\\\\src\\\\components\\\\SVGMap\\\\SVGMap.tsx\";\nimport React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport { SvgContainer, Modal, CloseButton } from './SVGMap.styled';\nimport Map from './ukraine.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SvgMap = ({\n  isOpen,\n  onClose,\n  regions\n}) => {\n  if (!isOpen) return null;\n  function processString(input) {\n    const lowerCaseString = input.toLowerCase();\n    const parts = lowerCaseString.split('-');\n    return parts;\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n      onClick: onClose,\n      children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SvgContainer, {\n      children: /*#__PURE__*/_jsxDEV(ReactSVG, {\n        src: Map,\n        beforeInjection: svg => {\n          console.log('Regions in SvgMap:', regions);\n          console.log('SVG загружен', svg);\n\n          // Обработка регионов\n          regions.forEach(region => {\n            // Применяем функцию processString к id региона\n            const processedIdParts = processString(region.id);\n            const processedId = processedIdParts.join('-'); // Если вам нужно использовать обработанный id\n            console.log({\n              processedId\n            });\n\n            // Поиск элемента в SVG по обработанному id\n            const element = svg.querySelector(`#${processedId}`);\n            if (element) {\n              element.setAttribute('style', `fill: ${region.color};`);\n            }\n          });\n        },\n        onError: error => {\n          console.error('Ошибка при загрузке SVG:', error);\n        },\n        style: {\n          width: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = SvgMap;\nexport default SvgMap;\nvar _c;\n$RefreshReg$(_c, \"SvgMap\");","map":{"version":3,"names":["React","ReactSVG","SvgContainer","Modal","CloseButton","Map","jsxDEV","_jsxDEV","SvgMap","isOpen","onClose","regions","processString","input","lowerCaseString","toLowerCase","parts","split","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","beforeInjection","svg","console","log","forEach","region","processedIdParts","id","processedId","join","element","querySelector","setAttribute","color","onError","error","style","width","height","_c","$RefreshReg$"],"sources":["D:/lessens/js/react/2/React_repos/pagin/src/components/SVGMap/SVGMap.tsx"],"sourcesContent":["import React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport { SvgContainer, Modal, CloseButton } from './SVGMap.styled';\nimport Map from './ukraine.svg';\n\ninterface Region {\n  id: string;\n  color: string;\n}\n\ninterface SvgMapProps {\n  isOpen: boolean;\n  onClose: () => void;\n  regions: Region[];\n}\n\nconst SvgMap: React.FC<SvgMapProps> = ({ isOpen, onClose, regions }) => {\n  if (!isOpen) return null;\n\n  function processString(input: string): string[] {\n    const lowerCaseString = input.toLowerCase();\n    const parts = lowerCaseString.split('-');\n    return parts;\n  }\n\n  return (\n    <Modal>\n      <CloseButton onClick={onClose}>Закрыть</CloseButton>\n      <SvgContainer>\n        <ReactSVG\n          src={Map}\n          beforeInjection={(svg) => {\n            console.log('Regions in SvgMap:', regions);\n            console.log('SVG загружен', svg);\n\n            // Обработка регионов\n            regions.forEach((region) => {\n              // Применяем функцию processString к id региона\n              const processedIdParts = processString(region.id);\n              const processedId = processedIdParts.join('-'); // Если вам нужно использовать обработанный id\n              console.log ({processedId});\n\n              // Поиск элемента в SVG по обработанному id\n              const element = svg.querySelector(`#${processedId}`);\n              if (element) {\n                element.setAttribute('style', `fill: ${region.color};`);\n              }\n            });\n          }}\n          onError={(error) => {\n            console.error('Ошибка при загрузке SVG:', error);\n          }}\n          style={{ width: '100%', height: 'auto' }} \n        />\n      </SvgContainer>\n    </Modal>\n  );\n};\n\nexport default SvgMap;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,YAAY,EAAEC,KAAK,EAAEC,WAAW,QAAQ,iBAAiB;AAClE,OAAOC,GAAG,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAahC,MAAMC,MAA6B,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EACtE,IAAI,CAACF,MAAM,EAAE,OAAO,IAAI;EAExB,SAASG,aAAaA,CAACC,KAAa,EAAY;IAC9C,MAAMC,eAAe,GAAGD,KAAK,CAACE,WAAW,CAAC,CAAC;IAC3C,MAAMC,KAAK,GAAGF,eAAe,CAACG,KAAK,CAAC,GAAG,CAAC;IACxC,OAAOD,KAAK;EACd;EAEA,oBACET,OAAA,CAACJ,KAAK;IAAAe,QAAA,gBACJX,OAAA,CAACH,WAAW;MAACe,OAAO,EAAET,OAAQ;MAAAQ,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACpDhB,OAAA,CAACL,YAAY;MAAAgB,QAAA,eACXX,OAAA,CAACN,QAAQ;QACPuB,GAAG,EAAEnB,GAAI;QACToB,eAAe,EAAGC,GAAG,IAAK;UACxBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEjB,OAAO,CAAC;UAC1CgB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,GAAG,CAAC;;UAEhC;UACAf,OAAO,CAACkB,OAAO,CAAEC,MAAM,IAAK;YAC1B;YACA,MAAMC,gBAAgB,GAAGnB,aAAa,CAACkB,MAAM,CAACE,EAAE,CAAC;YACjD,MAAMC,WAAW,GAAGF,gBAAgB,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAChDP,OAAO,CAACC,GAAG,CAAE;cAACK;YAAW,CAAC,CAAC;;YAE3B;YACA,MAAME,OAAO,GAAGT,GAAG,CAACU,aAAa,CAAC,IAAIH,WAAW,EAAE,CAAC;YACpD,IAAIE,OAAO,EAAE;cACXA,OAAO,CAACE,YAAY,CAAC,OAAO,EAAE,SAASP,MAAM,CAACQ,KAAK,GAAG,CAAC;YACzD;UACF,CAAC,CAAC;QACJ,CAAE;QACFC,OAAO,EAAGC,KAAK,IAAK;UAClBb,OAAO,CAACa,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD,CAAE;QACFC,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAO;MAAE;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEZ,CAAC;AAACqB,EAAA,GAzCIpC,MAA6B;AA2CnC,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}