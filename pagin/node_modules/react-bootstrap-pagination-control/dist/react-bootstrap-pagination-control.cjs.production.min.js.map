{"version":3,"file":"react-bootstrap-pagination-control.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Pagination as RBPagination } from 'react-bootstrap';\n\nexport type PaginationControlProps = {\n  page?: number,\n  between?: number,\n  total: number,\n  limit: number,\n  changePage?: (page: number) => any,\n  next?: boolean,\n  last?: boolean,\n  ellipsis?: number\n}\n\nexport const PaginationControl = ({\n  page = 1,\n  between = 3,\n  total,\n  limit,\n  changePage = page => console.log(page),\n  next = true,\n  last = false,\n  ellipsis = 0\n}: PaginationControlProps) => {\n\n  const total_pages = Math.ceil(total / limit)\n  between = between < 1 ? 1 : between\n  page = (page < 1 ? 1 : page > total_pages ? total_pages : page)\n  ellipsis = ellipsis < 1 ? 0 : ellipsis + 2 >= between ? between - 2 : ellipsis\n\n  let positions = Array.from({ length: total_pages }, (v, i) => {\n    v\n    return i\n  })\n\n  const qtd_pages = (between * 2) + 1\n  const range = (\n    total_pages <= qtd_pages\n      // Show active without slice\n      ? positions\n      : page - 1 <= between\n        // Show active in left\n        ? positions.slice(0, qtd_pages - (ellipsis > 0 ? ellipsis + 1 : 0))\n        : page + between >= total_pages\n          // Show active in right\n          ? positions.slice(total_pages - qtd_pages + (ellipsis > 0 ? ellipsis + 1 : 0), total_pages)\n          // Show active in middle\n          : positions.slice((page - 1) - (between - (ellipsis > 0 ? ellipsis + 1 : 0)), page + (between - (ellipsis > 0 ? ellipsis + 1 : 0)))\n  )\n\n  return (\n    total !== null && total > 0\n      ? <RBPagination className=\"justify-content-md-center\">\n        {\n          last\n          && <RBPagination.First\n            onClick={() => page > 1 ? changePage(1) : {}}\n            disabled={page <= 1} />\n        }\n        {\n          next\n          && <RBPagination.Prev\n            onClick={() => page > 1 ? changePage(page - 1) : {}}\n            disabled={page <= 1} />\n        }\n        {\n          total_pages > (between * 2) + 1 && ellipsis > 0\n          && positions.slice(0, page - 1 <= between ? 0 : ellipsis).map(value => {\n            return <RBPagination.Item key={value}\n              onClick={() => value !== page - 1 ? changePage(value + 1) : {}}>\n              {value + 1}\n            </RBPagination.Item>\n          })\n        }\n        {\n          // Show ellipsis when \"page\" is bigger than \"between\"\n          total_pages > (between * 2) + 1 && ellipsis > 0 && page - 1 > between\n          && <RBPagination.Ellipsis disabled />\n        }\n        {range.map(value => {\n          return <RBPagination.Item active={value === page - 1}\n            key={value}\n            onClick={() => value !== page - 1 ? changePage(value + 1) : {}}>\n            {value + 1}\n          </RBPagination.Item>\n        })}\n        {\n          // Show ellipsis when \"page\" is lower than \"between\"\n          total_pages > (between * 2) + 1 && ellipsis > 0 && page < total_pages - between\n          && <RBPagination.Ellipsis disabled />\n        }\n        {\n          total_pages > (between * 2) + 1 && ellipsis > 0\n          && positions.slice(page >= total_pages - between ? total_pages : total_pages - ellipsis, total_pages).map(value => {\n            return <RBPagination.Item key={value}\n              onClick={() => value !== page - 1 ? changePage(value + 1) : {}}>\n              {value + 1}\n            </RBPagination.Item>\n          })\n        }\n        {\n          next\n          && <RBPagination.Next\n            onClick={() => page < total_pages ? changePage(page + 1) : {}}\n            disabled={page >= total_pages} />\n        }\n        {\n          last\n          && <RBPagination.Last\n            onClick={() => page < total_pages ? changePage(total_pages) : {}}\n            disabled={page >= total_pages} />\n        }\n      </RBPagination>\n      : <></>\n  )\n}"],"names":["page","between","total","changePage","console","log","next","last","ellipsis","total_pages","Math","ceil","limit","positions","Array","from","length","v","i","qtd_pages","range","slice","React","RBPagination","className","First","onClick","disabled","Prev","map","value","Item","key","Ellipsis","active","Next","Last"],"mappings":"uMAciC,oBAC/BA,KAAAA,aAAO,QACPC,QAAAA,aAAU,IACVC,IAAAA,UAEAC,WAAAA,aAAa,SAAAH,GAAI,OAAII,QAAQC,IAAIL,UACjCM,KAAAA,oBACAC,KAAAA,oBACAC,SAAAA,aAAW,IAGLC,EAAcC,KAAKC,KAAKT,IAP9BU,OAQAX,EAAUA,EAAU,EAAI,EAAIA,EAC5BD,EAAQA,EAAO,EAAI,EAAIA,EAAOS,EAAcA,EAAcT,EAC1DQ,EAAWA,EAAW,EAAI,EAAIA,EAAW,GAAKP,EAAUA,EAAU,EAAIO,EAEtE,IAAIK,EAAYC,MAAMC,KAAK,CAAEC,OAAQP,IAAe,SAACQ,EAAGC,GAEtD,OAAOA,KAGHC,EAAuB,EAAVlB,EAAe,EAC5BmB,EACJX,GAAeU,EAEXN,EACAb,EAAO,GAAKC,EAEVY,EAAUQ,MAAM,EAAGF,GAAaX,EAAW,EAAIA,EAAW,EAAI,IAC9DR,EAAOC,GAAWQ,EAEhBI,EAAUQ,MAAMZ,EAAcU,GAAaX,EAAW,EAAIA,EAAW,EAAI,GAAIC,GAE7EI,EAAUQ,MAAOrB,EAAO,GAAMC,GAAWO,EAAW,EAAIA,EAAW,EAAI,IAAKR,GAAQC,GAAWO,EAAW,EAAIA,EAAW,EAAI,KAGvI,OACY,OAAVN,GAAkBA,EAAQ,EACtBoB,gBAACC,cAAaC,UAAU,6BAEtBjB,GACGe,gBAACC,aAAaE,OACfC,QAAS,WAAA,OAAM1B,EAAO,EAAIG,EAAW,GAAK,IAC1CwB,SAAU3B,GAAQ,IAGpBM,GACGgB,gBAACC,aAAaK,MACfF,QAAS,WAAA,OAAM1B,EAAO,EAAIG,EAAWH,EAAO,GAAK,IACjD2B,SAAU3B,GAAQ,IAGpBS,EAAyB,EAAVR,EAAe,GAAKO,EAAW,GAC3CK,EAAUQ,MAAM,EAAGrB,EAAO,GAAKC,EAAU,EAAIO,GAAUqB,KAAI,SAAAC,GAC5D,OAAOR,gBAACC,aAAaQ,MAAKC,IAAKF,EAC7BJ,QAAS,WAAA,OAAMI,IAAU9B,EAAO,EAAIG,EAAW2B,EAAQ,GAAK,KAC3DA,EAAQ,MAMbrB,EAAyB,EAAVR,EAAe,GAAKO,EAAW,GAAKR,EAAO,EAAIC,GAC3DqB,gBAACC,aAAaU,UAASN,cAE3BP,EAAMS,KAAI,SAAAC,GACT,OAAOR,gBAACC,aAAaQ,MAAKG,OAAQJ,IAAU9B,EAAO,EACjDgC,IAAKF,EACLJ,QAAS,WAAA,OAAMI,IAAU9B,EAAO,EAAIG,EAAW2B,EAAQ,GAAK,KAC3DA,EAAQ,MAKXrB,EAAyB,EAAVR,EAAe,GAAKO,EAAW,GAAKR,EAAOS,EAAcR,GACrEqB,gBAACC,aAAaU,UAASN,cAG1BlB,EAAyB,EAAVR,EAAe,GAAKO,EAAW,GAC3CK,EAAUQ,MAAMrB,GAAQS,EAAcR,EAAUQ,EAAcA,EAAcD,EAAUC,GAAaoB,KAAI,SAAAC,GACxG,OAAOR,gBAACC,aAAaQ,MAAKC,IAAKF,EAC7BJ,QAAS,WAAA,OAAMI,IAAU9B,EAAO,EAAIG,EAAW2B,EAAQ,GAAK,KAC3DA,EAAQ,MAKbxB,GACGgB,gBAACC,aAAaY,MACfT,QAAS,WAAA,OAAM1B,EAAOS,EAAcN,EAAWH,EAAO,GAAK,IAC3D2B,SAAU3B,GAAQS,IAGpBF,GACGe,gBAACC,aAAaa,MACfV,QAAS,WAAA,OAAM1B,EAAOS,EAAcN,EAAWM,GAAe,IAC9DkB,SAAU3B,GAAQS,KAGtBa"}